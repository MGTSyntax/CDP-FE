// // /assets/js/api.js - Centralized API Handling

// export const API_BASE_URL = 'http://localhost:3100';

// // Fetch Databases
// export async function getDatabases() {
//     try {
//         const response = await fetch(`${API_BASE_URL}/databases`);
//         if (!response.ok) throw new Error('Failed to fetch databases');
//         return await response.json();
//     } catch (error) {
//         console.error('Error fetching databases:', error);
//         return [];
//     }
// }

// // Perform Login Request
// export async function loginUser(database, username, password) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/login`, {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json',
//             },
//             body: JSON.stringify({ database, username, password }),
//         });

//         if (!response.ok) {
//             const errorData = await response.json();
//             throw new Error(errorData.message || 'Login failed');
//         }
//         return await response.json(); // Token or success response
//     } catch (error) {
//         console.error('Error during login:', error);
//         throw error;
//     }
// }

// // Get User Info by Employee No.
// export async function getUserInfo(db, empNo) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/user-info?db=${db}&empNo=${empNo}`);
//         const data = await response.json();
//         if (!response.ok) {
//             throw new Error(data.error || 'Failed to fetch user info');
//         }
//         return data;
//     } catch (error) {
//         console.error('Error fetching user info:', error);
//         return null;
//     }
// }

// // Fetch complete employee profile by employee number
// export async function getEmpProfile(db, empNo) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/employee-profile?db=${db}&empNo=${empNo}`);
//         const empProfdata = await response.json();
//         if (!response.ok) {
//             throw new Error(empProfdata.error || 'Failed to fetch employee profile');
//         }
//         return empProfdata;
//     } catch (error) {
//         console.error('Error fetching employee profile:', error);
//         return null;
//     }
// }

// // Fetch Departments and Detachments
// export async function getDepartments(selectedDb) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/departments?db=${selectedDb}`);
//         if (!response.ok) throw new Error('Failed to fetch departments');
//         return await response.json();
//     } catch (error) {
//         console.error('Error fetching departments:', error);
//         return [];
//     }
// }

// // Fetch Employees
// export async function getEmployees(selectedDb) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/employees?db=${selectedDb}`);
//         if (!response.ok) throw new Error('Failed to fetch employees');
//         return await response.json();
//     } catch (error) {
//         console.error('Error fetching departments:', error);
//         return [];
//     }
// }

// // Logout API (if needed in the future)
// export async function logout() {
//     try {
//         await fetch(`${API_BASE_URL}/logout`, {
//             method: 'POST',
//         });
//         console.log('Logout successfully');
//     } catch (error) {
//         console.error('Logout failed:', error);
//     }
// }

// // =========================
// // Documents API
// // =========================

// // Fetch documents by department
// export async function getDocuments(department) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/documents/${department}`);
//         if (!response.ok) throw new Error("Failed to fetch documents");
//         return await response.json();
//     } catch (error) {
//         console.error('Error fetching documents:', error);
//         return [];
//     }
// }

// // Upload a new document
// export async function uploadDocument(department, file) {
//     const formData = new FormData();
//     formData.append("document", file);
//     formData.append("department", department);

//     try {
//         const response = await fetch(`${API_BASE_URL}/upload`, {
//             method: "POST",
//             body: formData
//         });

//         const data = await response.json();
//         if (!response.ok) {
//             throw new Error(data.error || 'Upload failed');
//         }
//         return data;
//     } catch (error) {
//         console.error('Error uploading document:', error);
//         throw error;
//     }
// }

// // Delete document
// export async function deleteDocument(department, filename) {
//     try {
//         const response = await fetch(`${API_BASE_URL}/uploads/${department}/${filename}`, {
//             method: "DELETE",
//         });

//         const data = await response.json();
//         if (response.ok) {
//             throw new Error(data.error || 'Delete failed');
//         }
//         return data;
//     } catch (error) {
//         console.error('Error deleting document:', error);
//         throw error;
//     }
// }

// // /assets/js/auth.js

// import { getDatabases, loginUser, getUserInfo } from './api.js';

// document.addEventListener('DOMContentLoaded', async () => {
//     const loginForm = document.querySelector("#loginForm");
//     const dbSelect = document.querySelector("#database");

//     // Populate databases into the select dropdown
//     async function populateDatabases() {
//         const databases = await getDatabases();
//         if (dbSelect) {
//             databases.forEach(db => {
//                 const option = new Option(db.label, db.value);
//                 dbSelect.appendChild(option);
//             });
//         }
//     }
//     // Call populateDatabases when the page loads
//     await populateDatabases();

//     // Handle login form submission
//     loginForm.addEventListener("submit", async (e) => {
//         e.preventDefault();

//         const database = dbSelect.value;
//         const username = document.querySelector("#username").value.trim();
//         const password = document.querySelector("#password").value.trim();

//         if (!database || !username || !password) {
//             alert('All fields are required.');
//             return;
//         }

//         try {
//             // Call API to Login User
//             const result = await loginUser(database, username, password);

//             if (result.success) {
//                 const userInfo = await getUserInfo(database, result.empNo);
//                 if (userInfo) {
//                     const fullUserInfo = {
//                         database,
//                         empNo: userInfo.empNo,
//                         firstName: userInfo.firstName,
//                         lastName: userInfo.lastName,
//                         userLevel: result.userLevel
//                     };

//                     localStorage.setItem('userInfo', JSON.stringify(fullUserInfo));

//                     alert('Login successful.');

//                     const redirectMap = {
//                         superadmin: '/pages/dashboard.html',
//                         hr: '/pages/dashboard.html',
//                         payroll: '/pages/dashboard.html',
//                         adlogistics: '/pages/dashboard.html',
//                         finance: '/pages/dashboard.html',
//                         fieldpersonnel: '/pages/profile.html'
//                     };

//                     const redirectPage = redirectMap[result.userLevel] || '/pages/profile.html';
//                     window.location.href = redirectPage;
//                 } else {
//                     alert('Something went wrong loading user info.');
//                 }
//             } else {
//                 alert('Invalid credentials. Please try again.');
//             }
//         } catch (error) {
//             alert('Login failed: ' + error.message);
//         }
//     });
// });

// // /assets/js/dashboard.js

// import { renderNav } from "./statics/navbar.js";
// import { getEmpProfile } from "./api.js";

// document.addEventListener('DOMContentLoaded', () => {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));

//     if (!userInfo) {
//         console.error("No user data found in local storage.");
//         window.location.href = '/pages/login.html'; // redirect if not logged in
//         return;
//     }

//     // Render nav
//     renderNav(userInfo);

//     // Get top profile record
//     loadProfile();
// });

// async function loadProfile() {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));
//     if (!userInfo) return;

//     const profile = await getEmpProfile(userInfo.database, userInfo.empNo);
//     if (profile && profile.basicInfo) {
//         const basicInfoENum = document.getElementById("bi_empNo");
//         if (basicInfoENum) basicInfoENum.textContent = profile.basicInfo.ji_empNo || '';

//         const biFullName = document.getElementById("bi_fullname");
//         if (biFullName) {
//             const lname = profile.basicInfo.ji_lname || '';
//             const extname = profile.basicInfo.ji_extname ? `${profile.basicInfo.ji_extname}` : '';
//             const fname = profile.basicInfo.ji_fname || '';
//             const mname = profile.basicInfo.ji_mname ? ` ${profile.basicInfo.ji_mname}` : '';

//             biFullName.textContent = `${lname}${extname}, ${fname}${mname}`;
//         }

//         const eaEmailAdd = document.getElementById("email_add");
//         if (eaEmailAdd) eaEmailAdd.textContent = profile.emailaddInfo.email_add || '';

//         const jiPosition = document.getElementById("ji_pos");
//         if (jiPosition) jiPosition.textContent = profile.jobInfo.ji_pos || '';

//     }

// }

// // /assets/js/dashboard.js

// import { renderNav } from "./statics/navbar.js";
// import { getEmpProfile } from "./api.js";

// document.addEventListener('DOMContentLoaded', () => {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));

//     if (!userInfo) {
//         console.error("No user data found in local storage.");
//         window.location.href = '/pages/login.html'; // redirect if not logged in
//         return;
//     }

//     // Render nav
//     renderNav(userInfo);

//     // Get top profile record
//     loadProfile();
// });

// async function loadProfile() {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));
//     if (!userInfo) return;

//     const profile = await getEmpProfile(userInfo.database, userInfo.empNo);
//     if (profile && profile.basicInfo) {
//         const basicInfoENum = document.getElementById("bi_empNo");
//         if (basicInfoENum) basicInfoENum.textContent = profile.basicInfo.ji_empNo || '';

//         const biFullName = document.getElementById("bi_fullname");
//         if (biFullName) {
//             const lname = profile.basicInfo.ji_lname || '';
//             const extname = profile.basicInfo.ji_extname ? `${profile.basicInfo.ji_extname}` : '';
//             const fname = profile.basicInfo.ji_fname || '';
//             const mname = profile.basicInfo.ji_mname ? ` ${profile.basicInfo.ji_mname}` : '';

//             biFullName.textContent = `${lname}${extname}, ${fname}${mname}`;
//         }

//         const eaEmailAdd = document.getElementById("email_add");
//         if (eaEmailAdd) eaEmailAdd.textContent = profile.emailaddInfo.email_add || '';

//         const jiPosition = document.getElementById("ji_pos");
//         if (jiPosition) jiPosition.textContent = profile.jobInfo.ji_pos || '';

//     }

// }

// // /assets/js/documents.js
// import { getDocuments, uploadDocument, deleteDocument, API_BASE_URL } from './api.js';

// const documentList = document.getElementById("document-list");
// const uploadBtn = document.getElementById("uploadBtn");
// const fileInput = document.getElementById("docsUpload");

// let activeDepartment = "AnL";
// let documents = [];

// const selectedDb = localStorage.getItem("selectedDb");

// // Fetch and render documents
// async function loadDocuments() {
//     try {
//         documents = await getDocuments(activeDepartment);
//         renderDocuments();
//     } catch (err) {
//         console.error("Load documents error:", err);
//         documentList.innerHTML = `<p class="no-docs">Failed to load documents</p>`;
//     }
// }

// function renderDocuments() {
//     documentList.innerHTML = "";

//     if (!documents || documents.length === 0) {
//         documentList.innerHTML = `<p class="no-docs">No documents uploaded yet</p>`;
//         return;
//     }

//     documents.forEach((doc, index) => {
//         const item = document.createElement("div");
//         item.classList.add("document-item");

//         item.innerHTML = `
//             <span class="icon"><i class="fa-solid fa-file"></i></span>
//             <div class="info">
//                 <strong><a href="${API_BASE_URL}${doc.path}" target="_blank">${doc.filename}</a></strong>
//                 <small>Uploaded: ${new Date(doc.upload_date).toLocaleDateString()} by ${doc.uploaded_by}</small>
//             </div>
//             <div class="actions">
//                 <button class="delete-btn" data-index="${index}"><i class="fa fa-trash"></i></button>
//             </div>
//         `;
//         documentList.appendChild(item);
//     });

//     // Attach delete actions
//     document.querySelectorAll(".delete-btn").forEach(btn =>
//         btn.addEventListener("click", async (e) => {
//             const index = e.currentTarget.dataset.index;
//             const doc = documents[index];

//             try {
//                 await deleteDocument(doc.department, doc.filename);
//                 await loadDocuments();
//             } catch (err) {
//                 console.error("Delete error:", err);
//                 alert("Error deleting file");
//             }
//         })
//     );
// }

// uploadBtn.addEventListener("click", () => fileInput.click());

// fileInput.addEventListener("change", async () => {
//     const file = fileInput.files[0];
//     if (!file) return;

//     try {
//         await uploadDocument(activeDepartment, file);
//         await loadDocuments();
//     } catch (err) {
//         console.error('Upload failed:', err);
//         alert('Upload failed: ' + err.message);
//     } finally {
//         fileInput.value = '';
//     }
// });

// // Department selection
// document.querySelectorAll(".department-list li").forEach(li => {
//     li.addEventListener("click", () => {
//         document.querySelector(".department-list li.active")?.classList.remove("active");
//         li.classList.add("active");
//         activeDepartment = li.textContent.trim();
//         loadDocuments();
//     });
// });

// // Initial load
// loadDocuments();

// // /assets/js/profile.js
// import { renderNav } from "./statics/navbar.js";
// import { getEmpProfile } from "./api.js";

// document.addEventListener('DOMContentLoaded', () => {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));

//     if (!userInfo) {
//         console.error("No user data found in local storage.");
//         window.location.href = '/pages/login.html'; // redirect if not logged in
//         return;
//     }

//     // Render nav
//     renderNav(userInfo);

//     loadProfile();
// });

// async function loadProfile() {
//     const userInfo = JSON.parse(localStorage.getItem('userInfo'));
//     if (!userInfo) return;

//     const profile = await getEmpProfile(userInfo.database, userInfo.empNo);

//     if (!profile || !profile.basicInfo) {
//         console.error('Failed to load profile data.');
//         return;
//     }

//     // Basic Info
//     const basicInfoENum = document.getElementById("bi_empNo");
//     if (basicInfoENum) basicInfoENum.textContent = profile.basicInfo.ji_empNo || '';

//     const biFullName = document.getElementById("bi_fullname");
//     if (biFullName) {
//         const lname = profile.basicInfo.ji_lname || '';
//         const extname = profile.basicInfo.ji_extname ? `${profile.basicInfo.ji_extname}` : '';
//         const fname = profile.basicInfo.ji_fname || '';
//         const mname = profile.basicInfo.ji_mname ? ` ${profile.basicInfo.ji_mname}` : '';

//         biFullName.textContent = `${lname}${extname}, ${fname}${mname}`;
//     }

//     // Email Address
//     const eaEmailAdd = document.getElementById("email_add");
//     if (eaEmailAdd) eaEmailAdd.textContent = profile.emailaddInfo.email_add || '';
    
//     // Personal Info
//     const piAddress = document.getElementById("pi_add");
//     if (piAddress) piAddress.textContent = profile.personalInfo.pi_add || '';

//     const piContactNo = document.getElementById("pi_tel");
//     if (piContactNo) piContactNo.textContent = profile.personalInfo.pi_tel || '';

//     const piNationality = document.getElementById("pi_nationality");
//     if (piNationality) piNationality.textContent = profile.personalInfo.pi_nationality || '';

//     const piSex = document.getElementById("pi_sex");
//     if (piSex) piSex.textContent = profile.personalInfo.pi_sex || '';

//     const piCStatus = document.getElementById("pi_cstatus");
//     if (piCStatus) piCStatus.textContent = profile.personalInfo.pi_cstatus || '';

//     const piBirthdate = document.getElementById("pi_dbirth");
//     if (piBirthdate) piBirthdate.textContent = profile.personalInfo.pi_dbirth || '';

//     const piReligion = document.getElementById("pi_religion");
//     if (piReligion) piReligion.textContent = profile.personalInfo.pi_religion || '';

//     const piSSSNo = document.getElementById("pi_sssno");
//     if (piSSSNo) piSSSNo.textContent = profile.personalInfo.pi_sssno || '';

//     const piTIN = document.getElementById("pi_tin");
//     if (piTIN) piTIN.textContent = profile.personalInfo.pi_tin || '';

//     const piPHIC = document.getElementById("pi_philhealth");
//     if (piPHIC) piPHIC.textContent = profile.personalInfo.pi_philhealth || '';

//     const piPagibig = document.getElementById("pi_pagibig");
//     if (piPagibig) piPagibig.textContent = profile.personalInfo.pi_pagibig || '';

//     // Job Info
//     const jiDepartment = document.getElementById("ji_dept");
//     if (jiDepartment) jiDepartment.textContent = profile.jobInfo.ji_dept || '';

//     const jiClient = document.getElementById("ji_sec");
//     if (jiClient) jiClient.textContent = profile.jobInfo.ji_sec || '';

//     const jiPosition = document.getElementById("ji_pos");
//     if (jiPosition) jiPosition.textContent = profile.jobInfo.ji_pos || '';

//     const jiJobStatus = document.getElementById("ji_jobStat");
//     if (jiJobStatus) jiJobStatus.textContent = profile.jobInfo.ji_jobStat || '';

//     const jiDateHired = document.getElementById("ji_dateHired");
//     if (jiDateHired) jiDateHired.textContent = profile.jobInfo.ji_dateHired || '';
// }

// // /assets/js/script.js
// import { getDatabases, getDepartments, getEmployees } from './api.js';

// document.addEventListener('DOMContentLoaded', async () => {
//     // For detachments
//     const dbSelect = document.querySelector('#dbSelect');
//     const viewDataBtn = document.querySelector('#fetchDB');

//     let detachmentsData = [];
//     const detachmentsCol = ['dept_code', 'dept_name', 'sec_code', 'sec_name'];

//     // For employees
//     const dbSelectForEmp = document.querySelector('#dbSelectforEmp');
//     const viewDataBtnforEmp = document.querySelector('#fetchDBforEmp');

//     let employeeData = [];
//     const employeesCol = ['emp_code', 'emp_name', 'empsec_code', 'empsec_name'];

//     const tableBody = document.querySelector('#departmentsTable tbody');
//     const searchInput = document.querySelector('#searchInput');
//     const paginationControls = document.querySelector('#paginationControls');

//     let currentPage = 1;
//     let currentData = [];
//     let currentColumns = [];
//     let itemsPerPage = getItemsPerPage();

//     function getItemsPerPage() {
//         const screenHeight = window.innerHeight;
//         if (screenHeight <= 653) {
//             return 10;
//         } else if (screenHeight > 653 && screenHeight <= 965) {
//             return 20;
//         } else {
//             return 25;
//         }
//     }

//     // Fetch and Populate Databases for Selection
//     async function populateDatabases() {
//         const databases = await getDatabases();

//         if (dbSelect) {
//             databases.forEach(db => {
//                 const option1 = new Option(db.label, db.value);
//                 dbSelect.appendChild(option1);
//             });
//         }

//         if (dbSelectForEmp) {
//             databases.forEach(db => {
//                 const option2 = new Option(db.label, db.value);
//                 dbSelectForEmp.appendChild(option2);
//             });
//         }
//     }

//     // Load Databases on Page Load
//     await populateDatabases();

//     // Click View Button to Fetch Departments and Detachments from Backend API
//     if (viewDataBtn) {
//         viewDataBtn.addEventListener('click', async () => {
//             const selectedDb = dbSelect.value;
//             if (!selectedDb) {
//                 alert('Please select database.');
//                 return;
//             }

//             detachmentsData = await getDepartments(selectedDb);
//             currentData = detachmentsData;
//             currentColumns = detachmentsCol;
//             currentPage = 1;
//             renderTable();
//             setupPagination(detachmentsData.length);
//             searchInput.value = '';
//         });
//     }

//     // Click View Button to Fetch Employees from Backend API
//     if (viewDataBtnforEmp) {
//         viewDataBtnforEmp.addEventListener('click', async () => {
//             const selectedDbEmp = dbSelectForEmp.value;
//             if (!selectedDbEmp) {
//                 alert('Please select database.');
//                 return;
//             }

//             employeeData = await getEmployees(selectedDbEmp);
//             currentData = employeeData;
//             currentColumns = employeesCol;
//             currentPage = 1;
//             renderTable();
//             setupPagination(employeeData.length);
//         });
//     }
    
//     // Search results
//     searchInput.value = '';
//     searchInput.addEventListener('input', () => {
//         const searchItem = searchInput.value.toLowerCase();
//         const filteredData = currentData.filter(item =>
//             item[currentColumns[1]].toLowerCase().includes(searchItem) ||
//             (item[currentColumns[3]] && item[currentColumns[3]].toLowerCase().includes(searchItem))
//         );
//         currentPage = 1;
//         renderTable(filteredData);
//         setupPagination(detachmentsData.length);
//     });

//     // Render Table Data
//     function renderTable(data = currentData) {
//         tableBody.innerHTML = '';

//         const startIndex = (currentPage - 1) * itemsPerPage;
//         const endIndex = startIndex + itemsPerPage;
//         const pageData = data.slice(startIndex, endIndex);

//         if (pageData.length === 0) {
//             tableBody.innerHTML = '<td colspan="4">No results found.</td>';
//             return;
//         }

//         pageData.forEach(item => {
//             const row = document.createElement('tr');
//             row.innerHTML = currentColumns.map(col => `<td>${item[col] || ''}</td>`).join('');
//             tableBody.appendChild(row);
//         });
//     }

//     // Pagination Setup
//     function setupPagination(totalItems) {
//         paginationControls.innerHTML = '';
//         const totalPages = Math.ceil(totalItems / itemsPerPage);

//         // Curent page of Last page summary
//         const pageSummary = document.createElement('span');
//         pageSummary.textContent = `Page ${currentPage} of ${totalPages}`;
//         paginationControls.appendChild(pageSummary);

//         if (currentPage > 1) {
//             paginationControls.appendChild(createPaginationButton('<<', () => { goToPage(1); }));
//             paginationControls.appendChild(createPaginationButton('<', () => { goToPage(currentPage -1); }));
//         }

//         if (currentPage < totalPages) {
//             paginationControls.appendChild(createPaginationButton('>', () => { goToPage(currentPage + 1); }));
//             paginationControls.appendChild(createPaginationButton('>>', () => { goToPage(totalPages); }));
//         }
//     }
        
//     function createPaginationButton(text, onClick) {
//         const button = document.createElement('button');
//         button.textContent = text;
//         button.classList.add('pagination-button');
//         button.addEventListener('click', onClick);
//         return button;
//     }

//     function goToPage(page) {
//         currentPage = page;
//         renderTable();
//         setupPagination(currentData.length);
//     }
// });

// /assets/js/documents.js
<!-- import { API_BASE_URL, getDocuments, uploadDocument, deleteDocument, getCategories, getDepartmentFolderList } from './api.js';
import { updateBreadcrumb } from './statics/navbar.js';

const selectedDb = localStorage.getItem("selectedDb") || "file_metadata";
const departmentList = document.querySelector(".department-list");
const documentList = document.getElementById("document-list");
const uploadBtn = document.getElementById("uploadBtn");
const docsUpload = document.getElementById("docsUpload");
const uploadBox = document.querySelector(".upload-box");
const modal = document.getElementById("docModal");
const closeBtn = document.querySelector(".close-modal");
const openNewTabBtn = document.querySelector(".open-newtab-btn");
const userInfo = JSON.parse(localStorage.getItem("userInfo")) || {};

const allowedPermissions = {
    ANL: ["anlmanager", "superadmin"],
    FINANCE: ["finmanager", "superadmin"],
    HR: ["hrmanager", "superadmin"],
    IT: ["itmanager", "superadmin"],
    LEGAL: ["legmanager", "superadmin"],
    OPERATIONS: ["opsmanager", "superadmin"]
};

let activeDepartment = null;
let activeCategory = null
let currentFileUrl = null;
let documents = [];

/* -------------------
   File Icon Helper
------------------- */
function getFileIcon(filename) {
    const ext = filename.split('.').pop().toLowerCase();
    switch (ext) {
        case "pdf": return `<i class="fa-solid fa-file-pdf" style="color:#d9534f;"></i>`;
        case "png":
        case "jpg":
        case "jpeg": return `<i class="fa-solid fa-file-image" style="color:#f0ad4e;"></i>`;
        case "txt": return `<i class="fa-solid fa-file-lines" style="color:#6c757d;"></i>`;
        default: return `<i class="fa-solid fa-file" style="color:#999;"></i>`;
    }
}

/* -------------------
   Modal Handlers
------------------- */
function openModal(doc) {
    const modalBody = modal.querySelector(".modal-body");
    currentFileUrl = `${API_BASE_URL}${doc.path}`;
    modalBody.innerHTML = getPreviewHTML(doc);
    modal.classList.add("show");
}
openNewTabBtn.onclick = () => (currentFileUrl) && window.open(currentFileUrl, "_blank");
closeBtn.onclick = () => modal.classList.remove("show");
modal.addEventListener("click", (e) => { if (e.target === modal) modal.classList.remove("show"); });

/* -------------------
   Departments + Categories
------------------- */
async function loadDepartmentFolders() {
    try {
        const departmentFolders = await getDepartmentFolderList(selectedDb);

        departmentList.innerHTML = departmentFolders.map(d => 
            `<li class="department-item" data-deptid="${d.deptid}" data-deptname="${d.deptname}">
                <button class="department-btn">${d.deptname}</button>
                <ul class="category-list"></ul>
            </li>`
        ).join('');

        departmentList.querySelectorAll(".department-btn").forEach(btn => {
            btn.addEventListener("click", async () => {
                const parent = btn.closest(".department-item");
                parent.classList.toggle("expanded");

                const deptId = parent.dataset.deptid;
                const deptName = parent.dataset.deptname;
                const categoryList = parent.querySelector(".category-list");

                if (!categoryList.dataset.loaded) {
                    const categories = await getCategories(deptId, selectedDb);

                    categoryList.innerHTML = categories.map(cat => 
                        `<li>
                            <button class="category-btn" data-cat="${cat.catname}">${cat.catname}</button>
                        </li>`
                    ).join('');
                    categoryList.dataset.loaded = "true";

                    categoryList.querySelectorAll(".category-btn").forEach(cbtn => {
                        cbtn.addEventListener("click", () => {
                            activeDepartment = deptName;
                            activeCategory = cbtn.dataset.cat;
                            loadDocuments();

                            updateBreadcrumb(["Resources", deptName, activeCategory]);
                        });
                    });
                }
            });
        });
    } catch (err) {
        console.error("Failed to load departments:", err);
    }
}

/* -------------------
   Documents
------------------- */
function renderDocuments() {
    documentList.innerHTML = "";
    if (!documents || documents.length === 0) {
        documentList.innerHTML = `<p class="no-docs">No documents available for ${activeDepartment}</p>`;
        return;
    }

    const allowedRoles = (allowedPermissions[activeDepartment.toUpperCase()] || []).map(r => r.toLowerCase());

    documents.forEach((doc) => {
        const div = document.createElement("div");
        div.classList.add("document-item");
        div.innerHTML = `
            <div class="doc-header">
                <div class="file-info">
                    ${getFileIcon(doc.filename)}
                    <span class="filename">${doc.filename}</span>
                </div>
                <div class="actions">
                    <button class="preview-btn" aria-label="Preview Document">
                        <i class="fa-solid fa-eye"></i>
                    </button>
                    ${allowedRoles.includes(userInfo.userLevel?.toLowerCase())
                ? `<button class="delete-btn" data-file="${doc.filename}">
                        <i class="fa-solid fa-trash-can"></i>
                    </button>` : ""
            }
                </div>
            </div>
        `;
        documentList.appendChild(div);

        // Preview
        div.querySelector(".preview-btn").addEventListener("click", () => openModal(doc));

        // Delete
        const deleteBtn = div.querySelector(".delete-btn");
        if (deleteBtn) {
            deleteBtn.addEventListener("click", async () => {
                const filename = deleteBtn.dataset.file;
                if (!confirm(`Are you sure you want to delete ${filename}?`)) return;

                try {
                    await deleteDocument(activeDepartment, filename, selectedDb);
                    div.remove();
                    documents = documents.filter((d) => d.filename !== filename);
                    renderDocuments();
                } catch (err) {
                    alert("Failed to delete file: " + err.message);
                }
            });
        }
    });
}

function getPreviewHTML(doc) {
    const ext = doc.filename.split('.').pop().toLowerCase();
    const fileUrl = `${API_BASE_URL}${doc.path}`;
    if (ext === "pdf") return `<iframe src="${fileUrl}" class="doc-preview-frame pdf"></iframe>`;
    if (["png","jpg","jpeg"].includes(ext)) return `<img src="${fileUrl}" alt="${doc.filename}" class="doc-preview-img">`;
    if (ext === "txt") return `<iframe src="${fileUrl}" class="doc-preview-frame txt"></iframe>`;
    return `<p>Preview not available. <a href="${fileUrl}" target="_blank">Open file</a></p>`;
}

async function loadDocuments() {
    try {
        documents = await getDocuments(activeDepartment, selectedDb, activeCategory);
        renderDocuments();

        const allowedRoles = (allowedPermissions[activeDepartment?.toUpperCase()] || []).map(r => r.toLowerCase());
        uploadBox.style.display = allowedRoles.includes(userInfo.userLevel?.toLowerCase()) ? "block" : "none";

    } catch (err) {
        console.error("Failed to load documents:", err);
        documentList.innerHTML = `<p class="no-docs">Error loading documents.</p>`;
    }
}

/* -------------------
   Upload
------------------- */
uploadBtn.addEventListener("click", () => docsUpload.click());
docsUpload.addEventListener("change", async (e) => {
    const file = e.target.files[0];
    if (!file) return;

    try {
        await uploadDocument(activeDepartment, file, selectedDb);
        loadDocuments();
    } catch (err) {
        alert('Upload failed: ' + err.message);
    } finally {
        docsUpload.value = '';
    }
});

/* -------------------
   Init
------------------- */
loadDepartmentFolders(); -->

// .document-item .doc-preview {
//     max-height: 0;
//     overflow: hidden;
//     transition: max-height 0.3s ease, padding 0.3s ease;
//     padding: 0;
//     border-top: 1px solid #eee;
//     margin-top: 10px;
// }

// .document-item .doc-preview.open {
//     max-height: 600px;
//     padding: 10px 0;
// }

// .document-item .doc-preview iframe,
// .document-item .doc-preview img {
//     width: 100%;
//     border: none;
// }

// /* Filename */
// .document-item span {
//     font-size: 0.95rem;
//     color: #333;
//     font-weight: 500;
// }

// /* Actions */
// .document-item .actions {
//     display: flex;
//     align-items: center;
//     gap: 8px;
// }

// .document-item .actions button {
//     font-size: 0.9rem;
//     padding: 5px;
//     border-radius: 6px;
//     border: none;
//     cursor: pointer;
//     transition: background 0.2s ease, color 0.2s ease;
//     background: none;
//     color: #555;
// }

// .document-item .actions button:hover {
//     background: #007bff;
//     color: white;
// }

// .doc-preview-frame {
//     width: 100%;
//     height: 100%;
//     border: none;
// }

// .doc-preview-frame.pdf {
//     height: 100%;
// }

// .doc-preview-frame.txt {
//     height: 400px;
// }

// .doc-preview-img {
//     max-width: 100%;
//     max-height: 90vh;
//     object-fit: contain;
//     border-radius: 6px;
// }

// .doc-preview-fallback {
//     color: #666;
//     font-size: 0.95rem;
//     text-align: center;
// }

// .category-list {
//     display: none;
//     margin-left: 15px;
//     padding: 5px 0;
// }

// .department-item.expanded .category-list {
//     display: block;
// }